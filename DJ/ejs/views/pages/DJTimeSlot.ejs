<!DOCTYPE html>
<html lang="en">
    <head>
        <link rel="stylesheet" href="css/DJStyle.css">
        <title>DJTimeSlot</title>
        <style>
            .navbar .DjBack {
                padding: 10px; border: solid; background-color: #202122;
                margin-right: 40px;
                margin-left: 30%;
                flex-wrap: nowrap;
            }
            .border .content #head{
                background-color: #202122;
                margin-left: 40%; 
                width: 400px; 
                border: solid;
                padding: 5px;
                border-bottom: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9;
            }
            .border .content .boxHeadings{
                background-color: #202122;
                display: inline-block;  
                vertical-align: middle; 
                width: 2400px;
            }
            .border .content .boxHeadings .AsHead{
                float: left;
                margin-left: 100px;
                margin-right: 100px;
            }

            .border .content .boxHeadings .AsHead input{
                border-bottom: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9;
                width: 400px;
            }
            .border .content .boxHeadings .PrHead{
                margin-left: 50%;
            }

            .border .content .boxHeadings .PrHead input{
                border-bottom: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9;
                width: 400px;
            }

            .border .content .box{
                background-color: #202122;
                display: inline-block;  
                vertical-align: middle; 
                width: 2400px;
            }
            .border .content .box .Assigned{
                border-bottom: 4px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 4px solid #a9a9a9;
                overflow-y: auto;
                height: 800px;
                float: left;
                width: 1000px;
                margin-left: 100px;
                margin-right: 100px;
                margin-top: 10px;
                
            }
            .border .content .box .Assigned #assignedPlaylist{
                border-collapse: collapse; 
                width: 100%;         
                
            }
            .border .content .box .Assigned #assignedPlaylist thead th{
                position: sticky;
                top: 0;
                border-bottom: 4px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9;
                height: 30px;
                font-size: 20px;
            }
            .border .content .box .Assigned #assignedPlaylist #k .row{
                margin-bottom: 5%;
                border-bottom: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
            }

            .border .content .box .Assigned #assignedPlaylist #k .row td{
                border-right: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9 ;
                text-align: center;
                height: 20px;
            }
            .border .content .box .Previous{
                border-bottom: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9;
                overflow-y: auto;
                height: 800px;
                width: 1000px;
                margin-left: 100px;
                margin-right: 100px;
                margin-top: 10px;
                
            }
            .border .content .box .Previous .listHead{
                position: sticky;
                top: 0;      
                border-bottom: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9;
            }

            .border .content .box .Previous .listHead h1{
                margin-left: 10%;          
                
            }
            .border .content .box .Previous #prevList li {
                margin-top: 10px;
                margin-bottom: 10px;
                border-bottom: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9;
                padding: 20px;
                margin-left: -5%;
            }
            .border .content .box .Previous #prevList #desc {
                margin-left: 5%;
                width: 490px;
            }
            .border .content .box .Previous #prevList #Name {
                margin-left: 5%;
                width: 200px;
            }
            .border .content .box .Previous #prevList button {
                margin-right: 9%;
                padding: 10px;
                border-bottom: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9;
            }
            .border .content #editpopup{ 
                color: #002a54;
                margin-left: 8%;
                background-color: #a9a9a9;
                border-bottom: 4px solid #d77b02;
                border-left: 4px solid #d77b02;
                border-top: 4px solid #d77b02;
                border-right: 4px solid #d77b02;
                height: 50px;
                width: 650px;
            }
            .border .content #editpopup #popH{ 
                color: #002a54;
                margin-bottom: 10px;
                margin-right: 30%;
                margin-left: 30%;
                font-size: 20px;
                background-color: #a9a9a9;
            }
            .border .content #editpopup #editform{ 
                color: #002a54;
                background-color: #a9a9a9;
            }
            .border .content #editpopup #editform label{ 
                color: #002a54;
                font-size: 20px;
                background-color: #a9a9a9;
            }
            .border .content #editpopup #editform #songNamein{ 
                color: #002a54;
                background-color: #a9a9a9;
                border-bottom: 3px solid #202122;
                border-left: 3px solid #202122;
                border-top: 3px solid #202122;
                border-right: 3px solid #202122;
                margin-right: 10px;
            }
            .border .content #editpopup #editform #songDescription{ 
                color: #002a54;
                border-bottom: 3px solid #202122;
                border-left: 3px solid #202122;
                border-top: 3px solid #202122;
                border-right: 3px solid #202122;
                background-color: #a9a9a9;
            }
            .border .content #editpopup #editform #formButton{ 
                color: #002a54;
                padding: 5px;
                font-size: 15px;
                width: 100px;
                border-bottom: 2px solid #202122;
                border-left: 2px solid #202122;
                border-top: 2px solid #202122;
                border-right: 2px solid #202122;
                background-color: #a9a9a9;
            }
        </style>
        <%- include('../partials/NavbarDjTime'); %>
    </head>
    <body>
        <div class="border"> 
            <main class = "content">
                <dialog id="editpopup" close>
                    <form id="editform" style="display: contents;">
                        <h1 id="popH"> Song Edit</h1>
                        <label for="songNamein">Song: </label>
                        <input type="text" id="songNamein" name="inputbox" value="">
                        <label for="songDescription">Description: </label>
                        <input type="text" id="songDescription" name="input" value="">
                        <input type="button" id="formButton" style="width: 100px;"name="button" value="Save Changes" onclick="makeChange(this.form)">
                    </form>
                </dialog>
                <h1 id="head">Date: None</h1>
                <header class="boxHeadings">
                    <form class="AsHead">
                        <h1>Assigned PlayList</h1>
                        <label for="searchSongs" style="font-size: 30px;"> search for songs:</label>
                        <input type="text" id="searchSongs" name="inputbox" value="">
                        <input type="button" id="searchButton" style="width: 75px;"name="button" value="Search" onclick="searchSong(this.form)">
                    </form>
                    <form class="PrHead">
                        <h1>Previous PlayList</h1>
                        <label for="searchPlaylist" style="font-size: 30px;"> search for playlist:</label>
                        <input type="text" id="searchPlaylist" name="inputbox" value="">
                        <input type="button" id="searchButton" style="width: 75px;"name="button" value="Search" onclick="searchPrev(this.form)">
                    </form>
                </header>
                <section class="box">
                    <article class = "Assigned">
                        <table id="assignedPlaylist">
                            <thead>
                                <tr>
                                    <th style="width: 25%">Song Name</th>
                                    <th>Description</th>
                                    <th style="width: 10%">Edit</th>
                                </tr>
                            </thead>
                            <tbody id="k">

                            </tbody>
                        </table>
                    </article>
                    <article class="Previous">
                        <div class="listHead"><h1 id="name" style="display: inline-block;">PlayList Name</h1><h1 id="Description" style="display: inline-block;"> Description</h1><h1 id="button" style="display: inline-block;margin-left: 33%;"> Add Songs from Playlist</h1></div>
                        <ul id="prevList" style="list-style-type: none;">
                        </ul>
                    </article>
                </section>
            </main>
        </div>
        <script>
            /*
            let playlist = [
            {
                song: "WOW SONG",
                description: "wow that a song",
            },
            {
                song: "thats crazy",
                description: "coco",
            },
            {
                song: "lofi1",
                description: "lofi song",
            },
            {
                song: "WOW SONG2",
                description: "wow that a song2",
            },
            {
                song: "like that",
                description: "by josh smith and genre: pop",
            },
            {
                song: "sunset lover",
                description: "by biscuit and great for sunsets",
            }]*/
            let editedRow = 0;
            let timeslot = <%-JSON.stringify(TimeSlot)%>
           // console.log(timeslot);
            let prevPlaylists = timeslot.Playlists;
            //console.log(prevPlaylists);
            let header = document.getElementById("head");
            let time = timeslot.Time
            console.log(time);
            let date = timeslot.Date;
            console.log(date);
            header.innerHTML = "Date: "+ date + " Time: " + time;
            let playlist = timeslot.Playlist;
            addALLprevPlaylist()
            addALLSongsPlaylist();
            

            function addALLprevPlaylist() {
                let list = document.getElementById("prevList");
                while(list.firstElementChild) {
                    let child = list.firstElementChild;
                    list.removeChild(child);
                }
                for(let plays of prevPlaylists) {
                    let prevPlaylist = Object.values(plays); 
                    let play = document.createElement('li');
                    let Name = document.createElement('p');
                    Name.setAttribute('id', 'Name');  
                    Name.style.display = "inline-block";          
                    Name.innerHTML = prevPlaylist[1];                
                    play.appendChild(Name);
                    list.appendChild(play);
                    let desc = document.createElement('p');
                    desc.setAttribute('id', 'desc');   
                    desc.style.display = "inline-block";
                    desc.innerHTML = prevPlaylist[2];         
                    play.appendChild(desc);
                    list.appendChild(play);
                    let optionB = document.createElement('BUTTON');
                    optionB.setAttribute('id', 'option');              
                    let buText = document.createTextNode("Add Songs");       
                    optionB.appendChild(buText);
                    optionB.addEventListener('click',() => pageNext2(prevPlaylist[1]));
                    play.appendChild(optionB);
                    list.appendChild(play);
                }          
            } 

            function addALLSongsPlaylist() { 
                let tb = document.getElementById("k");
                while(tb.firstElementChild) {
                    let child = tb.firstElementChild;
                    tb.removeChild(child);
                }
                let i = 0;
                for(let song of playlist) {
                    let songS = Object.values(song);
                    let row = document.createElement("tr");
                    i++;
                    let id = '';
                    id +=i;
                    row.setAttribute('id', id);
                    row.setAttribute('class','row')
                    let td1 = document.createElement("td");
                    let td2 = document.createElement("td");
                    let td3 = document.createElement("td");
                    td1.innerHTML = songS[0];
                    td2.innerHTML = songS[1];
                    let edit = document.createElement('BUTTON');
                    edit.setAttribute('id', 'edit');   
                    edit.style.border = "none";
                    edit.innerHTML = "Edit";
                    edit.addEventListener("click",editRow);
                    td3.appendChild(edit);
                    row.appendChild(td1);
                    row.appendChild(td2);
                    row.appendChild(td3);
                    tb.appendChild(row);             
                }
            } 
            function pageNext2(name) {
                let ref = 'DJPlaylist';
                const fetchPromise = fetch('http://localhost:8080/DJTimeSlot',{
                    method: 'POST',
                    cache: "no-store",
                    headers:{
                        'Accept': 'application/json',
                    'Content-Type': 'application/json' 
                    }, 
                    body: JSON.stringify({
                        playName: name,
                        page: 1,
                        songName: "",
                        description: "",
                        index: 0
                    })
                });
                fetchPromise.then(function(response) {
                    responseClone = response.clone();
                    console.log(response);
                    return response.json();
                }).then(function(data) {
                    console.log(data.ThisPlay);
                    window.location.href=ref;
                }, function(rejectionReason) { 
                    console.log('Error parsing JSON from response:', rejectionReason, responseClone); 
                    responseClone.text() 
                    .then(function (bodyText) {
                        console.log('Received the following instead of valid JSON:', bodyText);
                    });
                });

            }
            function editRow(index) {
                let rowId = event.target.parentNode.parentNode.id;  
                let rownum = parseInt(rowId);
                rownum--;
                let songData = playlist[rownum];
                editedRow = rownum;
                let songD = Object.values(songData);
                let songNameEdit = songD[0];
                let descEdit = songD[1];
                let dialog = document.getElementById("editpopup");
                let songInput = document.getElementById("songNamein");
                let descInput = document.getElementById("songDescription"); 
                songInput.setAttribute("value",songNameEdit);
                songInput.value = songNameEdit;   
                descInput.setAttribute("value",descEdit);
                descInput.value = descEdit;
                dialog.show();        
            }
            function makeChange(form) {
                if(form.inputbox.value != "") {
                    playlist[editedRow].song = form.inputbox.value;
                }
                playlist[editedRow].description = form.input.value;
                let box = document.getElementById("editpopup");
                box.close(playlist[editedRow].song);
                updateDB(playlist[editedRow].song,playlist[editedRow].description,editedRow);
            }

            function updateDB(song,desc,row) {
                const fetchPromise = fetch('http://localhost:8080/DJTimeSlot',{
                    method: 'POST',
                    cache: "no-store",
                    headers:{
                        'Accept': 'application/json',
                    'Content-Type': 'application/json' 
                    }, 
                    body: JSON.stringify({
                        playName: "",
                        page: 0,
                        songName: song,
                        description: desc,
                        index: row
                    })
                });
                fetchPromise.then(function(response) {
                    responseClone = response.clone();
                    console.log(response);
                    return response.json();
                }).then(function(data) {
                    console.log(data.ThisPlaylist);
                    playlist = data.ThisPlaylist;
                    window.location.reload();
                }, function(rejectionReason) { 
                    console.log('Error parsing JSON from response:', rejectionReason, responseClone); 
                    responseClone.text() 
                    .then(function (bodyText) {
                        console.log('Received the following instead of valid JSON:', bodyText);
                    });
                });
            }

            function searchPrev(form) {
                var inputValue = form.inputbox.value;
                if(inputValue == '' || inputValue == null) {
                    addALLprevPlaylist();
                }
                else {
                    let i = 0;
                    let check = false;
                    let list = document.getElementById("prevList");
                    let listNames = list.querySelectorAll("#Name");
                    let listdesc = list.querySelectorAll("#desc");
                    let listButton = list.querySelectorAll("#option");
                    while(list.firstElementChild) {
                        let child = list.firstElementChild;
                        list.removeChild(child);
                    }
                    let input = inputValue.toLowerCase(); 
                    for(let p of listNames) {
                        let play = p.innerHTML;
                        if(play.includes(input) == true) {
                            check = true;
                            let li = document.createElement('li');
                            li.appendChild(p);
                            li.appendChild(listdesc[i]);
                            li.appendChild(listButton[i]); 
                            list.appendChild(li);
                        }
                        i++;
                    }
                    if(check == false) {
                        while(list.firstElementChild) {
                            let child = list.firstElementChild;
                            list.removeChild(child);
                        }
                    }
                }       
            }

            function searchSong(form) {
                var inputValue = form.inputbox.value;
                if(inputValue == "") {
                    addALLSongsPlaylist();
                }
                else {
                    let tb = document.getElementById("k");
                    while(tb.firstElementChild) {
                        let child = tb.firstElementChild;
                        tb.removeChild(child);
                    }
                    let i = 0;
                    for(let song of playlist) {
                        let songSeached = Object.values(song);
                        console.log(inputValue + " = " + songSeached[0]);
                        if(songSeached[0].includes(inputValue) == true) {
                            let row = document.createElement("tr");
                            i++;
                            let id = '';
                            id +=i;
                            row.setAttribute('id', id);
                            row.setAttribute('class','row');
                            let td1 = document.createElement("td");
                            let td2 = document.createElement("td");
                            let td3 = document.createElement("td");
                            td1.innerHTML = songSeached[0];
                            td2.innerHTML = songSeached[1];
                            let edit = document.createElement('BUTTON');
                            edit.setAttribute('id', 'edit');   
                            edit.style.border = "none";
                            edit.innerHTML = "Edit";
                            edit.addEventListener("click",editRow);
                            td3.appendChild(edit);
                            row.appendChild(td1);
                            row.appendChild(td2);
                            row.appendChild(td3);
                            tb.appendChild(row);
                        }             
                    }
                }
            }
        </script>
    </body>
</html>