<!DOCTYPE html>
<html lang="en">
    <head>
        <title>DJPlaylist</title>
        <style>
            * {
                margin: 0;
                color: #6699CC;
                background-color: #202122;
                flex-wrap: nowrap;
            }
            ::-webkit-scrollbar {
                -webkit-appearance: none;
                width: 15px;
            }
            ::-webkit-scrollbar-thumb {
                background:#6699CC;
            }

            ::-webkit-scrollbar-track {
                background-color:#202122;
            }
            .navbar {
                padding: 20px;
                display: flex;
                align-items: center;
                max-width: 2400px;
                max-height: 10%;
                min-width: 500px;
                margin: 0 auto;
                border-bottom: 5px solid black;
                border-left: 5px solid black;
                border-top: 5px solid black ;
                border-right: 5px solid black;
                background-color: #202122;
                margin-top: 1%;
                margin-bottom: 1%;
                position: relative;
            }
            .navbar h1 {
                color: #6699CC;
                background-color: #202122;
                margin-bottom: 10px;
                margin-left: 600px;
                font-size: 50px;
                text-align: center;
            }
            .navbar .Producer {
                padding: 10px; border: solid; background-color: #202122;
                margin-right: 40px;
                margin-left: 40px;
            }

            .navbar .Listener {
                padding: 10px; border: solid; background-color: #202122;
                margin-right: 40px;
                margin-left: 40px;
            }

            .navbar .Dj {
                padding: 10px; 
                border: solid; 
                background-color: #202122;
                margin-right: 40px;
                margin-left: 40px;
                flex-wrap: nowrap;
            }

            .border {
                padding: 20px;
                display: flex;
                align-items: top;
                max-width: 2400px;
                width: 2400px;
                max-height: 2000px;
                height: 1000px;
                margin: 0 auto;
                border-bottom: 10px solid black;
                border-left: 10px solid black;
                border-top: 10px solid black;
                border-right: 10px solid black;
                background-color: #202122;
                position: relative;
            }
            .border .content{
                background-color: #202122;
                width: 2400px;   
            }
            .border .content .boxHeadings{
                background-color: #202122;
                display: inline-block;  
                vertical-align: middle; 
                width: 2400px;
            }
            .border .content .boxHeadings .AsHead{
                float: left;
                margin-left: 100px;
                margin-right: 100px;
            }

            .border .content .boxHeadings .AsHead input{
                border-bottom: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9;
                width: 400px;
            }
            .border .content .boxHeadings .PrHead{
                margin-left: 50%;
            }

            .border .content .boxHeadings .PrHead input{
                border-bottom: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9;
                width: 400px;
            }
            .border .content .boxHeadings .PrHead .reset{
                border-bottom: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9;
            }
            .border .content .boxHeadings .AsHead .reset{
                border-bottom: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9;
            }

            .border .content .box{
                background-color: #202122;
                display: inline-block;  
                vertical-align: middle; 
                width: 2400px;
            }
            .border .content .box .Assigned{
                border-bottom: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9;
                overflow-y: auto;
                height: 800px;
                float: left;
                width: 1000px;
                margin-left: 100px;
                margin-right: 100px;
                margin-top: 10px;
                
            }
            .border .content .box .Assigned table{
                border-collapse: collapse; 
                width: 100%;         
                
            }
            .border .content .box .Assigned table thead th{
                position: sticky;
                top: 0;
                border-bottom: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9;
                height: 30px;
                font-size: 20px;
            }
            .border .content .box .Assigned table tbody tr{
                margin-bottom: 5%;
                border-bottom: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
            }

            .border .content .box .Assigned table tbody tr td{
                border-right: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9 ;
                text-align: center;
                height: 20px;
            }
            .border .content .box .Assigned table tbody tr td p{
                display: inline-block;
                margin-left: 5%;
            }
            .border .content .box .Previous{
                border-bottom: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9;
                overflow-y: auto;
                height: 800px;
                width: 1000px;
                margin-left: 100px;
                margin-right: 100px;
                margin-top: 10px;
                
            }
            .border .content .box .Previous table{
                border-collapse: collapse;
                width: 100%;        
                
            }
            .border .content .box .Previous table thead th{
                position: sticky;
                top: 0;
                border-bottom: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9;
                height: 30px;
                font-size: 20px;
            }
            .border .content .box .Previous table tbody tr{
                margin-bottom: 5%;
                border-bottom: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
            }

            .border .content .box .Previous table tbody tr td{
                border-right: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9 ;
                text-align: center;
                height: 20px;
            }
            .border .content .box .Previous table tbody tr td p{
                display: inline-block;
                margin-left: 5%;
            }
            .border .content .Buttons #back{
                margin-left: 100px;
                padding: 10px; 
                display: inline;
                border-bottom: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9; 
                background-color: #202122;
            }

            .border .content .Buttons #reset{
                margin-left: 10px;
                padding: 10px; 
                display: inline;
                border-bottom: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9; 
                background-color: #202122;
            }

            .border .content .Buttons #save{
                padding: 10px; 
                margin-left: 655px;
                width: 250px;
                border-bottom: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9;
                display: inline; 
                background-color: #202122;
            }
            .border .content .Buttons #editform #leftlabel{
                margin-left: 100px; 
                font-size: 20px;     
            }
            .border .content .Buttons #editform #rightlabel{
                margin-left: 10px; 
                font-size: 20px;     
            }
            .border .content .Buttons #editform #playNamein{  
                border-bottom: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9;
                margin-top: 20px;
                margin-bottom: 20px;
                width: 150px;
            }
            .border .content .Buttons #editform #playDescription{ 
                border-bottom: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9;
                width: 300px;
                margin-right: 10px;
                
            }
            .border .content .Buttons #editform #formButton{ 
                padding: 5px;
                font-size: 15px;
                border-bottom: 2px solid #a9a9a9;
                border-left: 2px solid #a9a9a9;
                border-top: 2px solid #a9a9a9 ;
                border-right: 2px solid #a9a9a9;
            }
        </style>
        <nav class = "navbar">
            <div class = "Producer">
                <a href="/ProducerPage" >Producer</a> 
            </div>
            <div class = "Dj">
                <a href="/DJHomepage">DJ</a>
            </div>
            <div class = "Listener">
                <a href="/listener_main" >Listener</a>
            </div>
            <h1>DJ PlayList Edit</h1>
        </nav>
    </head>
    <body>
        <div class="border"> 
            <main class = "content">
                <header class="boxHeadings">
                    <form class="AsHead">
                        <h1 style="font-size: 40px;">Assigned PlayList</h1>
                        <label for="searchSongs" style="font-size: 35px;"> Search for songs:</label>
                        <input type="text" id="searchPlaylistA" style="padding: 4px;"name="inputbox" value="">
                        <input type="button" id="searchButton" style="width: 100px;font-size: 20px;"name="button" value="Search" onclick="searchSongA(this.form)">
                    </form>
                    <form class="PrHead">
                        <h1 style="font-size: 40px;">Previous PlayList</h1>
                        <label for="searchPlaylist" style="font-size: 35px;"> Search for songs:</label>
                        <input type="text" id="searchPlaylistP" style="padding: 4px;"name="inputbox" value="">
                        <input type="button" id="searchButton" style="width: 100px;font-size: 20px;"name="button" value="Search" onclick="searchSongP(this.form)">
                    </form>
                </header>
                <section class="box">
                    <article class = "Assigned">
                        <table>
                            <thead>
                                <tr>
                                    <th style="width: 25%; font-size: 27px;">Song Name</th>
                                    <th style="font-size: 27px;">Description</th>
                                    <th style="width: 10%; font-size: 25px;">Delete Song</th>
                                </tr>
                            </thead>
                            <tbody id="assignTB" style="font-size: 20px;">
                            </tbody>
                        </table>
                    </article>
                    <article class="Previous">
                        <table>    
                            <thead>
                                <tr>
                                    <th style="width: 25%; font-size: 25px;">PlayList Name</th>
                                    <th style="font-size: 25px;">Description</th>
                                    <th style="width: 10%;font-size: 25px;">Add Songs</th>
                                </tr>
                            </thead>
                            <tbody id="prevTB" style="font-size: 20px;">
                            </tbody>
                        </table>
                    </article>
                </section>
                <footer class="Buttons">
                    <form id="editform" style="display: contents;">
                        <label id="leftlabel" for="playNamein">Playlist Name: </label>
                        <input type="text" id="playNamein" name="inputbox" value="">
                        <label id="rightlabel" for="playDescription">Playlist Description: </label>
                        <input type="text" id="playDescription" name="input" value="">
                        <input type="button" id="formButton" style="width: 250px;"name="button" value="Save And Add to Previous Playlist" onclick="saveAndAdd(this.form)">
                    </form>
                    <br/>
                    <button id="back" onclick="backPage()">Back</button>
                    <button id="reset" onclick="reset()">Reset</button>   
                    <button id="save" onclick="savePlaylist()">Save Only</button>   
                </footer>
            </main>
        </div>
        <script>
            /*
            let asPlaylist = [
            {
                Song: "WOW SONG",
                description: "wow that a song",
            },
            {
                Song: "thats crazy",
                description: "coco",
            },
            {
                Song: "lofi1",
                description: "lofi song",
            },
            {
                Song: "WOW SONG2",
                description: "wow that a song2",
            },
            {
                Song: "like that",
                description: "by josh smith and genre: pop",
            },
            {
                Song: "sunset lover",
                description: "by biscuit and great for sunsets",
            }]

            let prevPlaylist = [
            {
                Song: "lost within",
                description: "footbal yay",
            },
            {
                Song: "blue boi",
                description: "futball ayy",
            },
            {
                Song: "lofi1",
                description: "lofi song",
            },
            {
                Song: "lofi2",
                description: "lofi song",
            },
            {
                Song: "lofi3",
                description: "lofi song",
            },
            {
                Song: "lofi4",
                description: "lofi song",
            },
            {
                Song: "WOW SONG25",
                description: "wow that a song too many",
            },
            {
                Song: "in my dreams",
                description: "by george washingtion",
            },
            {
                Song: "lover of sunsets",
                description: "sun falling down",
            }]*/
            let playlists = <%-JSON.stringify(TPlaylists)%>
            console.log(playlists.Playlist);
            console.log(playlists.prevPlaylist);
            let asPlaylist = playlists.Playlist;
            let prevPlaylist = playlists.prevPlaylist;
            addALLSongsPlaylist();
            addALLSongsPlaylist2();

            function addALLSongsPlaylist() { 
                let tb = document.getElementById("prevTB");
                while(tb.firstElementChild) {
                    let child = tb.firstElementChild;
                    tb.removeChild(child);
                }
                let i = 0;
                console.log(prevPlaylist);
                for(let song of prevPlaylist) {
                    //let songS = Object.values(song);
                    let row = document.createElement("tr");
                    i++;
                    let id = '';
                    id +=i;
                    row.setAttribute('id', id);
                    row.setAttribute('class','row')
                    let td1 = document.createElement("td");
                    let td2 = document.createElement("td");
                    let td3 = document.createElement("td");
                    td1.innerHTML = song.title;
                    td2.innerHTML = "<p>Artist: " + song.artist + "</p><p>Genre: " + song.genre + "</p><p>Duration: " + song.duration +"</p>";;
                    let add = document.createElement('BUTTON');
                    add.setAttribute('id', 'add');   
                    add.style.border = "none";
                    add.style.fontSize = "20px";
                    add.innerHTML = "Add";
                    add.addEventListener("click",addRow);
                    td3.appendChild(add);
                    row.appendChild(td1);
                    row.appendChild(td2);
                    row.appendChild(td3);
                    tb.appendChild(row);             
                }
            }

            function addALLSongsPlaylist2() { 
                let tb = document.getElementById("assignTB");
                while(tb.firstElementChild != null) {
                    let child = tb.firstElementChild;
                    tb.removeChild(child);
                }
                let i = 0;
                for(let song of asPlaylist) {
                    let songS = Object.values(song);
                    let row = document.createElement("tr");
                    i++;
                    let id = '';
                    id +=i;
                    row.setAttribute('id', id);
                    row.setAttribute('class','row')
                    // Create cells
                    let td1 = document.createElement("td");
                    let td2 = document.createElement("td");
                    let td3 = document.createElement("td");
                    td1.innerHTML = song.title;
                    td2.innerHTML = "<p>Artist: " + song.artist + "</p><p>Genre: " + song.genre + "</p><p>Duration: " + song.duration +"</p>";
                    let deleteP = document.createElement('BUTTON');
                    deleteP.setAttribute('id', 'delete');   
                    deleteP.style.border = "none";
                    deleteP.style.fontSize = "18px";
                    deleteP.innerHTML = "Delete";
                    deleteP.addEventListener("click",deleteRow);
                    td3.appendChild(deleteP);
                    row.appendChild(td1);
                    row.appendChild(td2);
                    row.appendChild(td3);
                    tb.appendChild(row);             
                }
            }

            function deleteRow() {
                let rowId = event.target.parentNode.parentNode.id;  
                let rownum = parseInt(rowId);
                rownum--;
                console.log(rownum);
                asPlaylist.splice(rownum,1);
                console.log("yo");
                addALLSongsPlaylist2();
            }
            function addRow() {
                let rowId = event.target.parentNode.parentNode.id;  
                let rownum = parseInt(rowId);
                rownum--;
                console.log(rownum);
                asPlaylist.push(prevPlaylist[rownum]);
                addALLSongsPlaylist2();
                console.log("here");
            }
            
            function searchSongA(form) {
                var inputValue = form.inputbox.value;
                if(inputValue == "") {
                    addALLSongsPlaylist2();
                }
                else {
                    let tb = document.getElementById("assignTB");
                    while(tb.firstElementChild) {
                        let child = tb.firstElementChild;
                        tb.removeChild(child);
                    }
                    let i = 0;
                    for(let song of asPlaylist){
                        //let songSeached = Object.values(song);
                        console.log(inputValue + " = " + song.title);
                        let songN = song.title.toLowerCase();
                        let input = inputValue.toLowerCase();
                        if(songN.includes(input) == true) {
                            let row = document.createElement("tr");
                            i++;
                            let id = '';
                            id +=i;
                            row.setAttribute('id', id);
                            row.setAttribute('class','row');
                            let td1 = document.createElement("td");
                            let td2 = document.createElement("td");
                            td1.innerHTML = song.title;
                            td2.innerHTML = "<p>Artist: " + song.artist + "</p><p>Genre: " + song.genre + "</p><p>Duration: " + song.duration +"</p>";
                            row.appendChild(td1);
                            row.appendChild(td2);
                            tb.appendChild(row);
                        }             
                    }
                }
            }

            function searchSongP(form) {
                var inputValue = form.inputbox.value;
                if(inputValue == "") {
                    addALLSongsPlaylist();
                }
                else {
                    let tb = document.getElementById("prevTB");
                    while(tb.firstElementChild) {
                        let child = tb.firstElementChild;
                        tb.removeChild(child);
                    }
                    let i = 0;
                    for(let song of prevPlaylist) {
                        //let songSeached = Object.values(song);
                        console.log(inputValue + " = " + song.title);
                        let songN = song.title.toLowerCase();
                        let input = inputValue.toLowerCase();
                        if(songN.includes(input) == true) {
                            let row = document.createElement("tr");
                            i++;
                            let id = '';
                            id +=i;
                            row.setAttribute('id', id);
                            row.setAttribute('class','row');
                            let td1 = document.createElement("td");
                            let td2 = document.createElement("td");
                            td1.innerHTML = song.title;
                            td2.innerHTML = "<p>Artist: " + song.artist + "</p><p>Genre: " + song.genre + "</p><p>Duration: " + song.duration +"</p>";
                            row.appendChild(td1);
                            row.appendChild(td2);
                            tb.appendChild(row);
                        }             
                    }
                }
            }

            function backPage() {
                let ref = 'DJTimeSlot';
                window.location.href=ref;
            }
            function savePlaylist() {
                const fetchPromise = fetch('http://localhost:8080/DJPlaylist',{
                    method: 'POST',
                    cache: "no-store",
                    headers:{
                        'Accept': 'application/json',
                    'Content-Type': 'application/json' 
                    }, 
                    body: JSON.stringify({
                        page: 0,
                        newPlaylist: asPlaylist,
                        playName: "",
                        playDescription: ""
                    })
                });
                fetchPromise.then(function(response) {
                    responseClone = response.clone();
                    console.log(response);
                    return response.json();
                }).then(function(data) {
                    console.log(data.ThisPlay);
                    window.location.reload();
                }, function(rejectionReason) { 
                    console.log('Error parsing JSON from response:', rejectionReason, responseClone); 
                    responseClone.text() 
                    .then(function (bodyText) {
                        console.log('Received the following instead of valid JSON:', bodyText);
                    });
                });
            }
            function saveAndAdd(form) {
                let ref = 'DJTimeSlot';
                if(form.inputbox.value != null) {
                    const fetchPromise = fetch('http://localhost:8080/DJPlaylist',{
                        method: 'POST',
                        cache: "no-store",
                        headers:{
                            'Accept': 'application/json',
                        'Content-Type': 'application/json' 
                        }, 
                        body: JSON.stringify({
                            page: 1,
                            newPlaylist: asPlaylist,
                            playName: form.inputbox.value,
                            playDescription: form.input.value
                        })
                    });
                    fetchPromise.then(function(response) {
                        responseClone = response.clone();
                        console.log(response);
                        return response.json();
                    }).then(function(data) {
                        console.log(data.ThisPlay);
                        window.location.href=ref;
                    }, function(rejectionReason) { 
                        console.log('Error parsing JSON from response:', rejectionReason, responseClone); 
                        responseClone.text() 
                        .then(function (bodyText) {
                            console.log('Received the following instead of valid JSON:', bodyText);
                        });
                    });
                }
            }
            function reset() {
                window.location.reload();
            }
    </script>
    </body>
</html>